<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnZ2dm
        ZmZmZmZoaGhnZ2dnZ2dmZmZlZWVoaGhnZ2dnZ2doaGhmZmZoaGhmZmZmZmZnZ2dnZ2dmZmZoaGhnZ2dn
        Z2dmZmZmZmZmZmZnZ2dnZ2dnZ2dlZWVmZmZnZ2dlZWVnZ2dmZmZnZ2dnZ2cAAAAAAAAAAAAAAAAAAAAA
        AAAAAACvr6+Hh4eMjIyLi4uKioqLi4uKioqJiYmJiYmIiIiIiIiIiIiHh4eGhoaGhoaEhISGhoaFhYWE
        hISFhYWDg4ODg4ODg4ODg4OFhYWEhISEhISEhISGhoaGhoaFhYWGhoaHh4eIiIiIiIiIiIiKioqJiYmK
        ioqKioqKioqLi4uLi4uMjIyIiIihoaEAAAAAAACSkpKAgIB/f4COjo+Xl5eXl5eXl5eZmZmampqbm5ud
        nZ2enp6goKChoaGjo6OkpKSlpaWlpaWoqKioqKipqamqqqqrq6urq6uqqqqqqqqoqKinp6empqampqaj
        o6Ojo6OhoaGgoKCenp6dnZ2cnJybm5uZmZmYmJiXl5eWlpaPkJB/gICBgYF8fHwAAAAAAACMjIx5eXlk
        YmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABVU1F5eXl5eXkAAAAAAACMjIx7e3tCQUEAAAADAwMDAwMDAwMDAwMDAwMDAwMCAgIDAwMCAgICAgIC
        AgICAgICAgICAgICAgICAgIDAwMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDAwMD
        AwMCAgIDAwMCAgIDAwMDAwMDAwMDAwMAAAA0NDR6enp6enoAAAAAAACOjo56enpMTEwAAAAEBAQDAwMD
        AwMDAwMDAwMDAwMDAwMDAwMEBAQEBAQDAwMEBAQDAwMDAwMDAwMDAwMDAwMEBAQDAwMDAwMDAwMDAwMD
        AwMEBAQDAwMEBAQEBAQDAwMDAwMEBAQDAwMEBAQDAwMDAwMDAwMDAwMDAwMDAwMAAAA9PT17e3t8fHwA
        AAAAAACOjo56enpMTEwAAAAEBAQEBAQEBAQDAwMEBAQEBAQFBQUEBAQEBAQEBAQDAwMEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQAAAA+Pj56enp8fHwAAAAAAACQkJB9fX1NTU0AAAAFBQUFBQUFBQUFBQUEBAQEBAQE
        BAQEBAQEBAQFBQUEBAQEBAQFBQUFBQUFBQUEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQF
        BQUEBAQEBAQEBAQEBAQFBQUEBAQEBAQFBQUEBAQEBAQEBAQAAAA/Pz98fHx8fHwAAAAAAACSkpJ9fX1N
        TU0AAAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFBQUEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFBQUEBAQEBAQEBAQEBAQFBQUA
        AAA/Pz9+fn5+fn4AAAAAAACTk5OAgIBOTk4AAAAEBAQEBAQDAwMEBAQDAwMEBAQEBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAQDAwMEBAQDAwMDAwMDAwMEBAQDAwMEBAQEBAQEBAQDAwMEBAQEBAQEBAQE
        BAQEBAQDAwMEBAQDAwMEBAQEBAQEBAQAAABAQECAgIB/f38AAAAAAACVlZWBgYFQUFAAAAAEBAQEBAQE
        BAQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUAAABBQUGAgICBgYEA
        AAAAAACZmZmEhIRSUlIAAAAEBAQEBAQEBAQFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUGBgYAAABCQkKEhISEhIQAAAAAAACampqFhYVSUlIAAAAEBAQEBAQEBAQFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUAAABDQ0OFhYWGhoYAAAAAAACdnZ2IiIhU
        VFQAAAAEBAQEBAQFBQUGBgZ0cXCxrau1sa+3s7G9uLe/urnFwL/Iw8HOycfPy8nU0M7X0tDd2Nff2tjW
        09LQzMze2dfd2NbV0c/Tzs3PysjMx8XGwsDEv76+ubi7t7W2sbC+urmmoaAyMTEGBgYGBgYFBQUFBQUA
        AABERESJiYmKiooAAAAAAACgoKCLi4tVVVUAAAADAwMDAwMDAwMEBAR8eXeZlpWVk5KWlJKZlpWZl5ab
        mJecmZiem5qfnJuhnp2hn56ioJ+joJ+enJybmZijoJ+ioJ+hnp2gnZyem5qdmpmbmZiamJeYlpWXlJSV
        kpGamJiwrKo0NDQEBAQEBAQEBAQEBAQAAABFRUWKioqLi4sAAAAAAACjo6OOjo5YWFgAAAAEBAQEBAQE
        BAQFBQV1cnIvLy8rKys1NTU2NjYwMDAiIiIeHh4eHh4eHh4dHh4sJyQsJSQrJiQwKSczKykeHh4eHh4e
        Hh4eHh4eLjIeKi0eJykeLTAeKCoeHh4eHh4eHh6Sjo0rKysFBQUFBQUGBgYFBQUAAABISEiNjY2Ojo4A
        AAAAAACmpqaRkZFZWVkAAAAEBAQEBAQEBAQFBQVxbm02NTULCwsKCgoKCgoKCgoRERELCwsLCwsLCwsL
        CwsKCgoLCwsODg4KCgoLCwsLCwsLCwsLCwsLCwsLCgoLCwsTEhIODQ0LCwsLCwsLCwsLCwubl5YiIiIF
        BQUFBQUFBQUFBQQAAABISEiQkJCRkZEAAAAAAACqqqqTk5NbW1sAAAAEBAQEBAQEBAQFBQV0cnFDQkEA
        AAAAAAAAAAAAAAAGBgYAAAAAAAAAAAAAAAAAAAAAAAADAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI
        CAgDAwMAAAAAAAAAAAAAAACopaMYFxcFBQUGBgYFBQUFBQQAAABKSkqUlJSVlZUAAAAAAACtra2YmJhc
        XFwAAAAEBAQEBAQEBAQFBQVta2pMS0oFBQUGBgYGBgYGBgYMDAwFBQUGBgYGBgYGBgYGBgYGBgYJCQkF
        BQUGBgYGBgYGBgYGBgYGBgYGBgYGBgYODg4JCQkGBgYGBgYGBgYGBgawrKsSEhIFBQUFBQUFBQUFBQQA
        AABMTEyWlpaXl5cAAAAAAACysrKamppfX18AAAADAwMEBAQEBAQFBQVta2peXFwFBQUGBgYGBgYGBgYM
        DAwFBQUGBgYGBgYGBgYGBgYGBgYJCQkFBQUGBgYGBgYGBgYGBgYGBgYGBgYGBgYODg4JCQkGBgYGBgYG
        BgYGBga9urgFBQUFBQUFBQUFBQUFBQQAAABMTEyampqampoAAAAAAAC0tLScnJxjY2MAAAACAgIBAQEA
        AAABAQFkYmFmZWQBAQECAgICAgICAgIICAgBAQECAgICAgICAgICAgICAgIFBQUBAQECAgICAgICAgIC
        AgICAgICAgICAgIJCQkEBAQCAgICAgICAgICAgK/u7oBAQEBAQEBAQECAgIDAwMAAABRUVGcnJydnZ0A
        AAAAAAC5ubmioqJoaGgDAwMfHx8fHx8gICAhISFxcG97eXkAAAAAAAAAAAAAAAAFBQUAAAAAAAAAAAAA
        AAAAAAAAAAACAgIAAAAAAAEAAAAAAAAAAAAAAAAAAAEAAAEICAgCAwMAAAAAAAAAAAAAAADBvrwhISEh
        ISEgICAdHR0aGhoBAQFYWFihoaGhoaEAAAAAAAC8vLykpKRqamoGBgYfHx8fHx8gICAhISFubWyCgYAG
        BQQHBQUHBQUHBwcNDQwGBQUHBgUHBQQHBQUHBgUHBgYKCQkGBAUHBQUHBQUHBQUHBgUHBgYHBQQHBQQP
        Dg4KCAgHBgUHBwYHBwcHBwe7ubchISEhISEgICAiIiIiIiICAgJZWVmkpKSjo6MAAAAAAADCwsKoqKhu
        bm4LCwslJSUlJSUlJSUmJiZqaWmVk5IAHiMBFxsHJSsGBQUJEBICFhoDFhsBHCIBGBwBGh8GCAcKBwYA
        GB4AFRkAFhoAFRkBERQBDhAAGh8AGx8MEhMCICMCHSMBCw0FBQUHBwe5t7YmJiYmJiYmJiYmJiYmJiUH
        BwdeXl6np6eoqKgAAAAAAADFxcWqqqpxcXENDQ0oKCgoKCgoKCgpKSlqammenJsyLSwuKigBAAACAgIY
        FxcmIyIYFRUjHx0tKCgrJyUCAgICAwM6NTU1MjAtKCctKikkISEmJCQ4NDI9ODcWFRU3MjAkHx8qKSgK
        CgoBAQG8ubgpKSkpKSkpKSkpKSkpKSgKCgphYWGrq6uqqqoAAAAAAADJycmvr691dXUUFBQwMDAwMDAw
        MDAwMDBlZWSqqKcyIRkrHRY0IxsDAgMbFBE9JyAkGBIxIBotHhcvHhkSDAkBAQI7Jh43JBwxIBoyIRsu
        HhkqGxY/KiBEKyIVEQ80IhwjFxI0IhoRDAoAAAC0s7IwMDAwMDAvLy8wMDAwMC8QEBBlZWWurq6vr68A
        AAAAAADMzMywsLB2dnYVFRUyMjIyMjIxMTExMTFmZmaysK8mGRMqHhgrHRgBAgMSDgwmFxIaDwshFhEj
        FxMiFhMJBgYCAgImGBIhFBAhFRAhFQ8bEg4dFBAnGhUpGxURDg0lGBQUDQkmGRMNBwUBAQGxr64xMTEx
        MTExMTEyMjIyMjISEhJnZ2exsbGxsbEAAAAAAADR0dG1tbV7e3sbGxs4ODg4ODg4ODg4ODhiYmK9vLoA
        FxsBEhYBAQEBAQEHDA0AGR4BICgBBwkBAQEBAQEBAQEEAQEAICgBHSIBGR0BGh8BCgwBAQEBAQEBAQEJ
        CgoEHCIBHiMBHCIBHCIBExitq6s4ODg4ODg4ODg3Nzc4ODgYGBhsbGy1tbW1tbUAAAAAAADT09O4uLh+
        fn4eHh47Ozs7Ozs7Ozs7OztlZGTCwL9iWlRjW1ZjX1tjX1tkX1pjWlRkWFJlX1pnYl5lYV5mYl5oZF9l
        WVNmXFZpX1loXlloYV1oY19jX1tjX1tlYFxkW1RjWVNjWVNjWVNjW1aoqKc7Ozs7Ozs7Ozs7Ozs7Ozsb
        GxttbW23t7e4uLgAAAAAAADX19e7u7uBgYEiIiI+Pj4/Pz8/Pz9AQEBfX1/PzcxZVE5aVU9aVU9aVU9a
        VU9aVU9aVU9bVlBcV1FbVlBeWVNeWlReWVNdWFJdWFNcV1FdWFNcWFJaVU9aVU9aVU9aVU9aVU9aVU9a
        VU9aVU+hoaBAQEBAQEBAQEA/Pz8/Pz8fHx9ycnK7u7u7u7sAAAAAAADa2tq8vLyEhIQkJCRCQkJCQkJC
        QkJCQkJkZGTR0M/GxcTJxsbMysnNy8rGxcTHxsbKyMfLycjNy8rOzMvPzczQzs3Qzs3Qzs3PzcvOy8vE
        w8LBwL++vby9vLu6urm6uLi3tbS2tLS0srGzsbCXl5ZCQkJCQkJCQkJCQkJCQkIiIiJzc3O9vb29vb0A
        AAAAAADf39/AwMCHh4cpKSlHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHR0dH
        R0dHR0dHR0dHR0cmJiZ3d3fCwsLBwcEAAAAAAADh4eHExMSJiYkrKytJSUlJSUlJSUlJSUlJSUlJSUlJ
        SUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJ
        SUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUkoKCh5eXnExMTDw8MAAAAAAADl5eXGxsaN
        jY0uLi5NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1MTExNTU1NTU1NTU1NTU1NTU1NTU1N
        TU1NTU1NTU1NTU1MTExMTExNTU1NTU1NTU1MTExNTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTU0r
        Kyt7e3vHx8fHx8cAAAAAAADn5+fJycmOjo4xMTFPT09PT09PT09PT09PT09PT09QUFBPT09PT09PT09P
        T09QUFBPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09QUFBP
        T09PT09PT09PT09PT09PT09QUFBPT08uLi59fX3JycnJyckAAAAAAADr6+vLy8uRkZEyMjJSUlJSUlJR
        UVFRUVFSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJRUVFSUlJSUlJSUlJRUVFSUlJRUVFRUVFR
        UVFSUlJRUVFSUlJSUlJSUlJSUlJSUlJSUlJSUlJRUVFRUVFRUVFRUVFRUVFSUlIwMDB/f3/KysrMzMwA
        AAAAAADu7u7Nzc2Li4syMjJWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZW
        VlZWVlZWVlZWVlZWVlZXV1dWVlZWVlZWVlZWVlZWVlZWVlZXV1dXV1dWVlZWVlZWVlZWVlZWVlZWVlZW
        VlZWVlZWVlZWVlYxMTF7fHzOzs7Ozs4AAAAAAADv7+/Q0NDX1taNi4p1dXV0dHR0dHR0dHRzc3N0dHR0
        dHR0dHR0dHR0dHR0dHR0dHR0dHR0dHRzc3N0dHR0dHR1dXV0dHR0dHR1dXV0dHR0dHR0dHR0dHR0dHRz
        c3N0dHR0dHR0dHR0dHRzc3N1dXV0dHR0dHR0dHR0dHR0dHSBgH/Qz87Pz8/Pz88AAAAAAADx8fHR0dHV
        1dXp6enl5eXk5OTl5eXk5OTk5OTl5eXk5OTk5OTl5eXl5eXl5eXk5OTl5eXl5eXk5OTl5eXl5eXl5eXm
        5ubk5OTk5OTl5eXm5ubk5OTl5eXk5OTm5ubm5ubl5eXl5eXk5OTk5OTk5OTl5eXl5eXl5eXk5OTl5eXq
        6+vY2NnR0dHOzs4AAAAAAAD////y8vLj4+Pk5OTk5OTk5OTk5OTl5eXj4+Pk5OTk5OTj4+Pj4+Pk5OTk
        5OTk5OTk5OTk5OTj4+Pk5OTl5eXk5OTk5OTk5OTk5OTj4+Pj4+Pk5OTk5OTk5OTi4uLk5OTj4+Pk5OTj
        4+Pk5OTk5OTk5OTk5OTj4+Pl5eXk5OTk5OTk5OTt7e3///8AAAAAAAAAAADCwsK2tra2tra3t7e3t7e2
        tra2tra3t7e2tra3t7e2tra2tra3t7e3t7e3t7e2tra3t7e2tra3t7e3t7e2tra4uLi3t7e2tra2tra2
        tra4uLi2tra3t7e3t7e2tra3t7e3t7e2tra2tra3t7e2tra2tra2tra2tra2tra3t7e3t7fBwcEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////AAD///////8AAPwAAAAAPwAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAAB
        AACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAAAAAAAQAAgAAAAAABAACAAAAAAAEAAIAA
        AAAAAQAAwAAAAAADAAD///////8AAP///////wAA////////AAA=
</value>
  </data>
</root>